{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/img/favicon.ico","webpack:///./node_modules/intersection-observer/intersection-observer.js","webpack:///./src/js/generateSlides.js","webpack:///./src/js/data.js","webpack:///./src/js/main.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","document","IntersectionObserverEntry","this","intersectionRatio","registry","IntersectionObserver","THROTTLE_TIMEOUT","POLL_INTERVAL","USE_MUTATION_OBSERVER","observe","target","_observationTargets","some","item","element","nodeType","Error","_registerInstance","push","entry","_monitorIntersections","_checkForIntersections","unobserve","filter","length","_unmonitorIntersections","_unregisterInstance","disconnect","takeRecords","records","_queuedEntries","slice","_initThresholds","opt_threshold","threshold","Array","isArray","sort","a","isNaN","_parseRootMargin","opt_rootMargin","margins","split","map","margin","parts","exec","parseFloat","unit","_monitoringIntersections","_monitoringInterval","setInterval","addEvent","_domObserver","MutationObserver","attributes","childList","characterData","subtree","clearInterval","removeEvent","rootIsInDom","_rootIsInDom","rootRect","_getRootRect","top","bottom","left","right","width","height","forEach","targetRect","getBoundingClientRect","rootContainsTarget","_rootContainsTarget","oldEntry","intersectionRect","_computeTargetAndRootIntersection","newEntry","time","performance","now","boundingClientRect","rootBounds","_hasCrossedThreshold","isIntersecting","_callback","getComputedStyle","display","rect1","rect2","parent","getParentNode","atRoot","parentRect","parentComputedStyle","root","body","documentElement","overflow","Math","max","min","html","clientWidth","clientHeight","_expandRectByRootMargin","rect","_rootMarginValues","newRect","oldRatio","newRatio","thresholds","containsDeep","indexOf","index","splice","targetArea","intersectionArea","Number","toFixed","callback","opt_options","fn","timeout","timer","options","setTimeout","rootMargin","join","node","event","opt_useCapture","addEventListener","attachEvent","removeEventListener","detatchEvent","el","err","child","parentNode","host","str","artistStr","navStr","infoStr","slider","artist","nav","info","capitalize","string","charAt","toUpperCase","shuffledData","_toConsumableArray","firstname","lastname","backgroundPosition","random","require","querySelector","concat","innerHTML","timerId","sliderLogo","querySelectorAll","container","sliderParent","slides","cube","back","slideIndex","background1","background2","scrollNav","backgroundFirst","logo","e","stopPropagation","classList","toggle","TweenLite","preventDefault","parseInt","href","topOffset","to","scrollTo","intersectionObserver","entries","observer","dataset","id","style","zIndex","newSlide","contains","remove","add","opacity","moveLeft","current","currentNumber","newIndex","changeBorder","moveRight","slide","url","backgroundImage","runTimer","checkTimer","zoom","defaultPrevented"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __webpack_public_path__ + \"favicon.ico\";","/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the W3C SOFTWARE AND DOCUMENT NOTICE AND LICENSE.\n *\n *  https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n */\n\n(function(window, document) {\n'use strict';\n\n\n// Exits early if all IntersectionObserver and IntersectionObserverEntry\n// features are natively supported.\nif ('IntersectionObserver' in window &&\n    'IntersectionObserverEntry' in window &&\n    'intersectionRatio' in window.IntersectionObserverEntry.prototype) {\n\n  // Minimal polyfill for Edge 15's lack of `isIntersecting`\n  // See: https://github.com/w3c/IntersectionObserver/issues/211\n  if (!('isIntersecting' in window.IntersectionObserverEntry.prototype)) {\n    Object.defineProperty(window.IntersectionObserverEntry.prototype,\n      'isIntersecting', {\n      get: function () {\n        return this.intersectionRatio > 0;\n      }\n    });\n  }\n  return;\n}\n\n\n/**\n * An IntersectionObserver registry. This registry exists to hold a strong\n * reference to IntersectionObserver instances currently observing a target\n * element. Without this registry, instances without another reference may be\n * garbage collected.\n */\nvar registry = [];\n\n\n/**\n * Creates the global IntersectionObserverEntry constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-entry\n * @param {Object} entry A dictionary of instance properties.\n * @constructor\n */\nfunction IntersectionObserverEntry(entry) {\n  this.time = entry.time;\n  this.target = entry.target;\n  this.rootBounds = entry.rootBounds;\n  this.boundingClientRect = entry.boundingClientRect;\n  this.intersectionRect = entry.intersectionRect || getEmptyRect();\n  this.isIntersecting = !!entry.intersectionRect;\n\n  // Calculates the intersection ratio.\n  var targetRect = this.boundingClientRect;\n  var targetArea = targetRect.width * targetRect.height;\n  var intersectionRect = this.intersectionRect;\n  var intersectionArea = intersectionRect.width * intersectionRect.height;\n\n  // Sets intersection ratio.\n  if (targetArea) {\n    // Round the intersection ratio to avoid floating point math issues:\n    // https://github.com/w3c/IntersectionObserver/issues/324\n    this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));\n  } else {\n    // If area is zero and is intersecting, sets to 1, otherwise to 0\n    this.intersectionRatio = this.isIntersecting ? 1 : 0;\n  }\n}\n\n\n/**\n * Creates the global IntersectionObserver constructor.\n * https://w3c.github.io/IntersectionObserver/#intersection-observer-interface\n * @param {Function} callback The function to be invoked after intersection\n *     changes have queued. The function is not invoked if the queue has\n *     been emptied by calling the `takeRecords` method.\n * @param {Object=} opt_options Optional configuration options.\n * @constructor\n */\nfunction IntersectionObserver(callback, opt_options) {\n\n  var options = opt_options || {};\n\n  if (typeof callback != 'function') {\n    throw new Error('callback must be a function');\n  }\n\n  if (options.root && options.root.nodeType != 1) {\n    throw new Error('root must be an Element');\n  }\n\n  // Binds and throttles `this._checkForIntersections`.\n  this._checkForIntersections = throttle(\n      this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);\n\n  // Private properties.\n  this._callback = callback;\n  this._observationTargets = [];\n  this._queuedEntries = [];\n  this._rootMarginValues = this._parseRootMargin(options.rootMargin);\n\n  // Public properties.\n  this.thresholds = this._initThresholds(options.threshold);\n  this.root = options.root || null;\n  this.rootMargin = this._rootMarginValues.map(function(margin) {\n    return margin.value + margin.unit;\n  }).join(' ');\n}\n\n\n/**\n * The minimum interval within which the document will be checked for\n * intersection changes.\n */\nIntersectionObserver.prototype.THROTTLE_TIMEOUT = 100;\n\n\n/**\n * The frequency in which the polyfill polls for intersection changes.\n * this can be updated on a per instance basis and must be set prior to\n * calling `observe` on the first target.\n */\nIntersectionObserver.prototype.POLL_INTERVAL = null;\n\n/**\n * Use a mutation observer on the root element\n * to detect intersection changes.\n */\nIntersectionObserver.prototype.USE_MUTATION_OBSERVER = true;\n\n\n/**\n * Starts observing a target element for intersection changes based on\n * the thresholds values.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.observe = function(target) {\n  var isTargetAlreadyObserved = this._observationTargets.some(function(item) {\n    return item.element == target;\n  });\n\n  if (isTargetAlreadyObserved) {\n    return;\n  }\n\n  if (!(target && target.nodeType == 1)) {\n    throw new Error('target must be an Element');\n  }\n\n  this._registerInstance();\n  this._observationTargets.push({element: target, entry: null});\n  this._monitorIntersections();\n  this._checkForIntersections();\n};\n\n\n/**\n * Stops observing a target element for intersection changes.\n * @param {Element} target The DOM element to observe.\n */\nIntersectionObserver.prototype.unobserve = function(target) {\n  this._observationTargets =\n      this._observationTargets.filter(function(item) {\n\n    return item.element != target;\n  });\n  if (!this._observationTargets.length) {\n    this._unmonitorIntersections();\n    this._unregisterInstance();\n  }\n};\n\n\n/**\n * Stops observing all target elements for intersection changes.\n */\nIntersectionObserver.prototype.disconnect = function() {\n  this._observationTargets = [];\n  this._unmonitorIntersections();\n  this._unregisterInstance();\n};\n\n\n/**\n * Returns any queue entries that have not yet been reported to the\n * callback and clears the queue. This can be used in conjunction with the\n * callback to obtain the absolute most up-to-date intersection information.\n * @return {Array} The currently queued entries.\n */\nIntersectionObserver.prototype.takeRecords = function() {\n  var records = this._queuedEntries.slice();\n  this._queuedEntries = [];\n  return records;\n};\n\n\n/**\n * Accepts the threshold value from the user configuration object and\n * returns a sorted array of unique threshold values. If a value is not\n * between 0 and 1 and error is thrown.\n * @private\n * @param {Array|number=} opt_threshold An optional threshold value or\n *     a list of threshold values, defaulting to [0].\n * @return {Array} A sorted list of unique and valid threshold values.\n */\nIntersectionObserver.prototype._initThresholds = function(opt_threshold) {\n  var threshold = opt_threshold || [0];\n  if (!Array.isArray(threshold)) threshold = [threshold];\n\n  return threshold.sort().filter(function(t, i, a) {\n    if (typeof t != 'number' || isNaN(t) || t < 0 || t > 1) {\n      throw new Error('threshold must be a number between 0 and 1 inclusively');\n    }\n    return t !== a[i - 1];\n  });\n};\n\n\n/**\n * Accepts the rootMargin value from the user configuration object\n * and returns an array of the four margin values as an object containing\n * the value and unit properties. If any of the values are not properly\n * formatted or use a unit other than px or %, and error is thrown.\n * @private\n * @param {string=} opt_rootMargin An optional rootMargin value,\n *     defaulting to '0px'.\n * @return {Array<Object>} An array of margin objects with the keys\n *     value and unit.\n */\nIntersectionObserver.prototype._parseRootMargin = function(opt_rootMargin) {\n  var marginString = opt_rootMargin || '0px';\n  var margins = marginString.split(/\\s+/).map(function(margin) {\n    var parts = /^(-?\\d*\\.?\\d+)(px|%)$/.exec(margin);\n    if (!parts) {\n      throw new Error('rootMargin must be specified in pixels or percent');\n    }\n    return {value: parseFloat(parts[1]), unit: parts[2]};\n  });\n\n  // Handles shorthand.\n  margins[1] = margins[1] || margins[0];\n  margins[2] = margins[2] || margins[0];\n  margins[3] = margins[3] || margins[1];\n\n  return margins;\n};\n\n\n/**\n * Starts polling for intersection changes if the polling is not already\n * happening, and if the page's visibility state is visible.\n * @private\n */\nIntersectionObserver.prototype._monitorIntersections = function() {\n  if (!this._monitoringIntersections) {\n    this._monitoringIntersections = true;\n\n    // If a poll interval is set, use polling instead of listening to\n    // resize and scroll events or DOM mutations.\n    if (this.POLL_INTERVAL) {\n      this._monitoringInterval = setInterval(\n          this._checkForIntersections, this.POLL_INTERVAL);\n    }\n    else {\n      addEvent(window, 'resize', this._checkForIntersections, true);\n      addEvent(document, 'scroll', this._checkForIntersections, true);\n\n      if (this.USE_MUTATION_OBSERVER && 'MutationObserver' in window) {\n        this._domObserver = new MutationObserver(this._checkForIntersections);\n        this._domObserver.observe(document, {\n          attributes: true,\n          childList: true,\n          characterData: true,\n          subtree: true\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Stops polling for intersection changes.\n * @private\n */\nIntersectionObserver.prototype._unmonitorIntersections = function() {\n  if (this._monitoringIntersections) {\n    this._monitoringIntersections = false;\n\n    clearInterval(this._monitoringInterval);\n    this._monitoringInterval = null;\n\n    removeEvent(window, 'resize', this._checkForIntersections, true);\n    removeEvent(document, 'scroll', this._checkForIntersections, true);\n\n    if (this._domObserver) {\n      this._domObserver.disconnect();\n      this._domObserver = null;\n    }\n  }\n};\n\n\n/**\n * Scans each observation target for intersection changes and adds them\n * to the internal entries queue. If new entries are found, it\n * schedules the callback to be invoked.\n * @private\n */\nIntersectionObserver.prototype._checkForIntersections = function() {\n  var rootIsInDom = this._rootIsInDom();\n  var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();\n\n  this._observationTargets.forEach(function(item) {\n    var target = item.element;\n    var targetRect = getBoundingClientRect(target);\n    var rootContainsTarget = this._rootContainsTarget(target);\n    var oldEntry = item.entry;\n    var intersectionRect = rootIsInDom && rootContainsTarget &&\n        this._computeTargetAndRootIntersection(target, rootRect);\n\n    var newEntry = item.entry = new IntersectionObserverEntry({\n      time: now(),\n      target: target,\n      boundingClientRect: targetRect,\n      rootBounds: rootRect,\n      intersectionRect: intersectionRect\n    });\n\n    if (!oldEntry) {\n      this._queuedEntries.push(newEntry);\n    } else if (rootIsInDom && rootContainsTarget) {\n      // If the new entry intersection ratio has crossed any of the\n      // thresholds, add a new entry.\n      if (this._hasCrossedThreshold(oldEntry, newEntry)) {\n        this._queuedEntries.push(newEntry);\n      }\n    } else {\n      // If the root is not in the DOM or target is not contained within\n      // root but the previous entry for this target had an intersection,\n      // add a new record indicating removal.\n      if (oldEntry && oldEntry.isIntersecting) {\n        this._queuedEntries.push(newEntry);\n      }\n    }\n  }, this);\n\n  if (this._queuedEntries.length) {\n    this._callback(this.takeRecords(), this);\n  }\n};\n\n\n/**\n * Accepts a target and root rect computes the intersection between then\n * following the algorithm in the spec.\n * TODO(philipwalton): at this time clip-path is not considered.\n * https://w3c.github.io/IntersectionObserver/#calculate-intersection-rect-algo\n * @param {Element} target The target DOM element\n * @param {Object} rootRect The bounding rect of the root after being\n *     expanded by the rootMargin value.\n * @return {?Object} The final intersection rect object or undefined if no\n *     intersection is found.\n * @private\n */\nIntersectionObserver.prototype._computeTargetAndRootIntersection =\n    function(target, rootRect) {\n\n  // If the element isn't displayed, an intersection can't happen.\n  if (window.getComputedStyle(target).display == 'none') return;\n\n  var targetRect = getBoundingClientRect(target);\n  var intersectionRect = targetRect;\n  var parent = getParentNode(target);\n  var atRoot = false;\n\n  while (!atRoot) {\n    var parentRect = null;\n    var parentComputedStyle = parent.nodeType == 1 ?\n        window.getComputedStyle(parent) : {};\n\n    // If the parent isn't displayed, an intersection can't happen.\n    if (parentComputedStyle.display == 'none') return;\n\n    if (parent == this.root || parent == document) {\n      atRoot = true;\n      parentRect = rootRect;\n    } else {\n      // If the element has a non-visible overflow, and it's not the <body>\n      // or <html> element, update the intersection rect.\n      // Note: <body> and <html> cannot be clipped to a rect that's not also\n      // the document rect, so no need to compute a new intersection.\n      if (parent != document.body &&\n          parent != document.documentElement &&\n          parentComputedStyle.overflow != 'visible') {\n        parentRect = getBoundingClientRect(parent);\n      }\n    }\n\n    // If either of the above conditionals set a new parentRect,\n    // calculate new intersection data.\n    if (parentRect) {\n      intersectionRect = computeRectIntersection(parentRect, intersectionRect);\n\n      if (!intersectionRect) break;\n    }\n    parent = getParentNode(parent);\n  }\n  return intersectionRect;\n};\n\n\n/**\n * Returns the root rect after being expanded by the rootMargin value.\n * @return {Object} The expanded root rect.\n * @private\n */\nIntersectionObserver.prototype._getRootRect = function() {\n  var rootRect;\n  if (this.root) {\n    rootRect = getBoundingClientRect(this.root);\n  } else {\n    // Use <html>/<body> instead of window since scroll bars affect size.\n    var html = document.documentElement;\n    var body = document.body;\n    rootRect = {\n      top: 0,\n      left: 0,\n      right: html.clientWidth || body.clientWidth,\n      width: html.clientWidth || body.clientWidth,\n      bottom: html.clientHeight || body.clientHeight,\n      height: html.clientHeight || body.clientHeight\n    };\n  }\n  return this._expandRectByRootMargin(rootRect);\n};\n\n\n/**\n * Accepts a rect and expands it by the rootMargin value.\n * @param {Object} rect The rect object to expand.\n * @return {Object} The expanded rect.\n * @private\n */\nIntersectionObserver.prototype._expandRectByRootMargin = function(rect) {\n  var margins = this._rootMarginValues.map(function(margin, i) {\n    return margin.unit == 'px' ? margin.value :\n        margin.value * (i % 2 ? rect.width : rect.height) / 100;\n  });\n  var newRect = {\n    top: rect.top - margins[0],\n    right: rect.right + margins[1],\n    bottom: rect.bottom + margins[2],\n    left: rect.left - margins[3]\n  };\n  newRect.width = newRect.right - newRect.left;\n  newRect.height = newRect.bottom - newRect.top;\n\n  return newRect;\n};\n\n\n/**\n * Accepts an old and new entry and returns true if at least one of the\n * threshold values has been crossed.\n * @param {?IntersectionObserverEntry} oldEntry The previous entry for a\n *    particular target element or null if no previous entry exists.\n * @param {IntersectionObserverEntry} newEntry The current entry for a\n *    particular target element.\n * @return {boolean} Returns true if a any threshold has been crossed.\n * @private\n */\nIntersectionObserver.prototype._hasCrossedThreshold =\n    function(oldEntry, newEntry) {\n\n  // To make comparing easier, an entry that has a ratio of 0\n  // but does not actually intersect is given a value of -1\n  var oldRatio = oldEntry && oldEntry.isIntersecting ?\n      oldEntry.intersectionRatio || 0 : -1;\n  var newRatio = newEntry.isIntersecting ?\n      newEntry.intersectionRatio || 0 : -1;\n\n  // Ignore unchanged ratios\n  if (oldRatio === newRatio) return;\n\n  for (var i = 0; i < this.thresholds.length; i++) {\n    var threshold = this.thresholds[i];\n\n    // Return true if an entry matches a threshold or if the new ratio\n    // and the old ratio are on the opposite sides of a threshold.\n    if (threshold == oldRatio || threshold == newRatio ||\n        threshold < oldRatio !== threshold < newRatio) {\n      return true;\n    }\n  }\n};\n\n\n/**\n * Returns whether or not the root element is an element and is in the DOM.\n * @return {boolean} True if the root element is an element and is in the DOM.\n * @private\n */\nIntersectionObserver.prototype._rootIsInDom = function() {\n  return !this.root || containsDeep(document, this.root);\n};\n\n\n/**\n * Returns whether or not the target element is a child of root.\n * @param {Element} target The target element to check.\n * @return {boolean} True if the target element is a child of root.\n * @private\n */\nIntersectionObserver.prototype._rootContainsTarget = function(target) {\n  return containsDeep(this.root || document, target);\n};\n\n\n/**\n * Adds the instance to the global IntersectionObserver registry if it isn't\n * already present.\n * @private\n */\nIntersectionObserver.prototype._registerInstance = function() {\n  if (registry.indexOf(this) < 0) {\n    registry.push(this);\n  }\n};\n\n\n/**\n * Removes the instance from the global IntersectionObserver registry.\n * @private\n */\nIntersectionObserver.prototype._unregisterInstance = function() {\n  var index = registry.indexOf(this);\n  if (index != -1) registry.splice(index, 1);\n};\n\n\n/**\n * Returns the result of the performance.now() method or null in browsers\n * that don't support the API.\n * @return {number} The elapsed time since the page was requested.\n */\nfunction now() {\n  return window.performance && performance.now && performance.now();\n}\n\n\n/**\n * Throttles a function and delays its execution, so it's only called at most\n * once within a given time period.\n * @param {Function} fn The function to throttle.\n * @param {number} timeout The amount of time that must pass before the\n *     function can be called again.\n * @return {Function} The throttled function.\n */\nfunction throttle(fn, timeout) {\n  var timer = null;\n  return function () {\n    if (!timer) {\n      timer = setTimeout(function() {\n        fn();\n        timer = null;\n      }, timeout);\n    }\n  };\n}\n\n\n/**\n * Adds an event handler to a DOM node ensuring cross-browser compatibility.\n * @param {Node} node The DOM node to add the event handler to.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to add.\n * @param {boolean} opt_useCapture Optionally adds the even to the capture\n *     phase. Note: this only works in modern browsers.\n */\nfunction addEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.addEventListener == 'function') {\n    node.addEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.attachEvent == 'function') {\n    node.attachEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Removes a previously added event handler from a DOM node.\n * @param {Node} node The DOM node to remove the event handler from.\n * @param {string} event The event name.\n * @param {Function} fn The event handler to remove.\n * @param {boolean} opt_useCapture If the event handler was added with this\n *     flag set to true, it should be set to true here in order to remove it.\n */\nfunction removeEvent(node, event, fn, opt_useCapture) {\n  if (typeof node.removeEventListener == 'function') {\n    node.removeEventListener(event, fn, opt_useCapture || false);\n  }\n  else if (typeof node.detatchEvent == 'function') {\n    node.detatchEvent('on' + event, fn);\n  }\n}\n\n\n/**\n * Returns the intersection between two rect objects.\n * @param {Object} rect1 The first rect.\n * @param {Object} rect2 The second rect.\n * @return {?Object} The intersection rect or undefined if no intersection\n *     is found.\n */\nfunction computeRectIntersection(rect1, rect2) {\n  var top = Math.max(rect1.top, rect2.top);\n  var bottom = Math.min(rect1.bottom, rect2.bottom);\n  var left = Math.max(rect1.left, rect2.left);\n  var right = Math.min(rect1.right, rect2.right);\n  var width = right - left;\n  var height = bottom - top;\n\n  return (width >= 0 && height >= 0) && {\n    top: top,\n    bottom: bottom,\n    left: left,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n\n\n/**\n * Shims the native getBoundingClientRect for compatibility with older IE.\n * @param {Element} el The element whose bounding rect to get.\n * @return {Object} The (possibly shimmed) rect of the element.\n */\nfunction getBoundingClientRect(el) {\n  var rect;\n\n  try {\n    rect = el.getBoundingClientRect();\n  } catch (err) {\n    // Ignore Windows 7 IE11 \"Unspecified error\"\n    // https://github.com/w3c/IntersectionObserver/pull/205\n  }\n\n  if (!rect) return getEmptyRect();\n\n  // Older IE\n  if (!(rect.width && rect.height)) {\n    rect = {\n      top: rect.top,\n      right: rect.right,\n      bottom: rect.bottom,\n      left: rect.left,\n      width: rect.right - rect.left,\n      height: rect.bottom - rect.top\n    };\n  }\n  return rect;\n}\n\n\n/**\n * Returns an empty rect object. An empty rect is returned when an element\n * is not in the DOM.\n * @return {Object} The empty rect.\n */\nfunction getEmptyRect() {\n  return {\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    width: 0,\n    height: 0\n  };\n}\n\n/**\n * Checks to see if a parent element contains a child element (including inside\n * shadow DOM).\n * @param {Node} parent The parent element.\n * @param {Node} child The child element.\n * @return {boolean} True if the parent node contains the child node.\n */\nfunction containsDeep(parent, child) {\n  var node = child;\n  while (node) {\n    if (node == parent) return true;\n\n    node = getParentNode(node);\n  }\n  return false;\n}\n\n\n/**\n * Gets the parent node of an element or its host element if the parent node\n * is a shadow root.\n * @param {Node} node The node whose parent to get.\n * @return {Node|null} The parent node or null if no parent exists.\n */\nfunction getParentNode(node) {\n  var parent = node.parentNode;\n\n  if (parent && parent.nodeType == 11 && parent.host) {\n    // If the parent is a shadow root, return the host element.\n    return parent.host;\n  }\n  return parent;\n}\n\n\n// Exposes the constructors globally.\nwindow.IntersectionObserver = IntersectionObserver;\nwindow.IntersectionObserverEntry = IntersectionObserverEntry;\n\n}(window, document));\n","import data from './data.js';\r\n\r\nconst shuffle = array => [...array].sort(() => Math.random() - 0.5);\r\n\r\nconst capitalize = string => string.charAt(0).toUpperCase() + string.slice(1);\r\n\r\nlet shuffledData = shuffle(data);\r\n\r\nfunction generateSlides() {\r\n    let str = '';\r\n    let artistStr = '';\r\n    let navStr = '';\r\n    let infoStr = '';\r\n    let slider = document.querySelector(\".slider__content\");\r\n    let artist = document.querySelector(\".artist\");\r\n    let nav = document.querySelector(\".nav\");\r\n    let info = document.querySelector(\".info__artists\");\r\n\r\n    shuffledData.forEach((el, index) => {\r\n\r\n        str += `<div id=\"slide${index}\" data-id=\"${index}\" class=\"slide ${index == 0 ? 'show-slide' : ''}\">\r\n                    <div class=\"slide__img-wrapper\" style=\"background-image:url('../img/${el.firstname} ${el.lastname}.png');\"></div>\r\n                    <a href=\"../assets/${capitalize(el.firstname)} ${capitalize(el.lastname)}.pdf\" class=\"slide__artist slide__artist--mobile\" download>\r\n                        ${capitalize(el.firstname)} ${capitalize(el.lastname)}\r\n                    </a>\r\n                    <a href=\"../assets/${capitalize(el.firstname)} ${capitalize(el.lastname)}.pdf\" class=\"slide__portfolio slide__portfolio--mobile\" download>\r\n                        Portfolio\r\n                    </a>\r\n                </div > `\r\n\r\n        artistStr += `<div class='artist__item' id='artist${index}'>\r\n                        <a href=\"../assets/${capitalize(el.firstname)} ${capitalize(el.lastname)}.pdf\" class=\"artist__name\" download>\r\n                        ${capitalize(el.firstname)} ${capitalize(el.lastname)}\r\n                        </a>\r\n                        <a href=\"../assets/${capitalize(el.firstname)} ${capitalize(el.lastname)}.pdf\" class=\"artist__portfolio\" download>\r\n                            Portfolio\r\n                        </a>\r\n                    </div>`;\r\n\r\n        navStr += `<a href='#slide${index}' class='nav__item'>\r\n                        ${capitalize(el.lastname)}\r\n                   </a>`;\r\n\r\n        infoStr += `<a href=\"../assets/${capitalize(el.firstname)} ${capitalize(el.lastname)}.pdf\" class=\"info__second-page-text\" download>\r\n                        ${capitalize(el.firstname)} ${capitalize(el.lastname)}\r\n                    </a>`;\r\n\r\n\r\n    });\r\n\r\n    slider.innerHTML = str;\r\n\r\n    artist.innerHTML = artistStr;\r\n\r\n    nav.innerHTML = navStr;\r\n\r\n    info.innerHTML = `<h2 class=\"info__header\">\r\n                            artists\r\n                        </h2>\r\n                        ${infoStr}`;\r\n\r\n\r\n}\r\n\r\nexport { generateSlides, shuffledData };","let data = [\r\n\r\n    { firstname: 'camila', lastname: 'lamarca', backgroundPosition: \"center\" },\r\n    { firstname: 'carolina', lastname: 'zancolli', backgroundPosition: \"center\" },\r\n    { firstname: 'claudia', lastname: 'cortinez', backgroundPosition: \"center\" },\r\n    { firstname: 'florencia', lastname: 'walter', backgroundPosition: \"center\" },\r\n    { firstname: 'samuel', lastname: 'lasso', backgroundPosition: \"50% 70%\" },\r\n    { firstname: 'sol', lastname: 'pochat', backgroundPosition: \"center\" }\r\n];\r\n\r\nexport default data;","import \"../scss/main.scss\";\r\nimport '../img/favicon.ico';\r\n\r\nrequire('intersection-observer');\r\n\r\nimport { generateSlides, shuffledData } from './generateSlides';\r\n\r\ngenerateSlides();\r\n\r\nwindow.addEventListener('load', function () {\r\n    let sliderLogo = document.querySelectorAll(\".logo__wrapper\");\r\n    let container = document.querySelector(\".container\");\r\n    let slider = document.querySelector(\".slider__content\");\r\n    let sliderParent = document.querySelector(\".slider\");\r\n    let slides = document.querySelectorAll(\".slide\");\r\n    let cube = document.querySelector('.d__cube');\r\n    let back = document.querySelector(\".d__cube-face--back\");\r\n    let timerId;\r\n    let slideIndex = 0;\r\n    let background1 = document.querySelector(\".container__background--1\");\r\n    let background2 = document.querySelector(\".container__background--2\");\r\n    let scrollNav = document.querySelectorAll(\".nav__item\");\r\n    let backgroundFirst = true;\r\n\r\n\r\n    //show info\r\n\r\n    sliderLogo.forEach(logo => {\r\n        logo.addEventListener('click', (e) => {\r\n            e.stopPropagation();\r\n            container.classList.toggle(\"show-info\");\r\n        });\r\n    });\r\n\r\n\r\n    //scroll to slide when nav clicked\r\n\r\n    scrollNav.forEach(el => {\r\n        el.addEventListener('click', e => {\r\n            if (TweenLite) {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                let n = parseInt(el.href.split(\"#slide\")[1]);\r\n                let topOffset = slider.clientHeight * n;\r\n                TweenLite.to(slider, 1, { scrollTo: topOffset });\r\n            }\r\n        });\r\n    });\r\n\r\n    const intersectionObserver = new IntersectionObserver((entries, observer) => {\r\n        entries.forEach((entry) => {\r\n\r\n\r\n            let artist = document.querySelector(`#artist${entry.target.dataset.id}`);\r\n\r\n            if (entry.intersectionRatio >= 0.6) {\r\n\r\n                artist.style.zIndex = '1';\r\n                slideIndex = parseInt(entry.target.dataset.id);\r\n                let newSlide = slides[slideIndex];\r\n\r\n                if (!newSlide.classList.contains(\"show-slide\")) {\r\n                    let currentSlide = document.querySelector(\".show-slide\");\r\n                    currentSlide.classList.remove(\"show-slide\");\r\n                    newSlide.classList.add(\"show-slide\");\r\n                }\r\n\r\n\r\n                //show active nav when corresponding slide is visible\r\n\r\n                scrollNav.forEach(nav => {\r\n                    nav.classList.remove(\"scrolled\");\r\n                    if (entry.target.id == nav.href.split(\"#\")[1]) {\r\n                        nav.classList.add(\"scrolled\");\r\n                    }\r\n                });\r\n            }\r\n\r\n            //change opacity for artist name when its slide is in viewport\r\n\r\n            artist.style.opacity = `${entry.intersectionRatio >= 0.6 ? 1 : 0}`;\r\n\r\n        });\r\n    }, { threshold: 0.6 });\r\n\r\n    slides.forEach((element) => intersectionObserver.observe(element));\r\n\r\n\r\n    function moveLeft(e) {\r\n        let current = document.querySelector(\".show-slide\");\r\n        let currentNumber = parseInt(current.dataset.id);\r\n        if (current) {\r\n            if (e) e.stopPropagation();\r\n            let newIndex = currentNumber > 0 ? currentNumber - 1 : slides.length - 1;\r\n            let newSlide = slides[newIndex];\r\n\r\n            current.classList.remove(\"show-slide\");\r\n\r\n            if (TweenLite) {\r\n\r\n                TweenLite.to(slider, 0, { scrollTo: slider.clientHeight * newIndex });\r\n            }\r\n\r\n            newSlide.classList.add(\"show-slide\");\r\n            setTimeout(changeBorder, 400, newIndex);\r\n\r\n        }\r\n    }\r\n\r\n    //show slide to the right\r\n\r\n    function moveRight(e) {\r\n        let current = document.querySelector(\".show-slide\");\r\n        let currentNumber = parseInt(current.dataset.id);\r\n        if (current) {\r\n            if (e) e.stopPropagation();\r\n            let newIndex = currentNumber < slides.length - 1 ? currentNumber + 1 : 0;\r\n            let newSlide = slides[newIndex];\r\n\r\n            current.classList.remove(\"show-slide\");\r\n\r\n            if (TweenLite) {\r\n\r\n                TweenLite.to(slider, 0, { scrollTo: slider.clientHeight * newIndex });\r\n            }\r\n\r\n            newSlide.classList.add(\"show-slide\");\r\n            setTimeout(changeBorder, 400, newIndex);\r\n        }\r\n    }\r\n\r\n    //change cubes edge background when gallary image changes\r\n\r\n    function changeBorder(newIndex) {\r\n        let slide = shuffledData[newIndex]\r\n        let url = `url('../img/${slide.firstname} ${slide.lastname}.png')`;\r\n        if (!backgroundFirst) {\r\n            background1.style.backgroundImage = url;\r\n            background1.style.backgroundPosition = slide.backgroundPosition;\r\n            background1.style.opacity = '1';\r\n            background2.style.opacity = '0';\r\n        }\r\n        else {\r\n            background2.style.backgroundImage = url;\r\n            background2.style.backgroundPosition = slide.backgroundPosition;\r\n            background1.style.opacity = '0';\r\n            background2.style.opacity = '1';\r\n        }\r\n\r\n        backgroundFirst = !backgroundFirst;\r\n\r\n    }\r\n\r\n    //intro animation\r\n    setTimeout(() => {\r\n        changeBorder(0);\r\n        runTimer();\r\n    }, 50);\r\n\r\n    //change slides every 5secs\r\n\r\n    function runTimer() {\r\n        timerId = setInterval(() => {\r\n            moveRight();\r\n        }, 5000);\r\n    }\r\n\r\n\r\n    function checkTimer() {\r\n        if (cube.classList.contains(\"d__cube--big\")) {\r\n            clearInterval(timerId);\r\n        }\r\n        else {\r\n            clearInterval(timerId);\r\n            runTimer();\r\n        }\r\n\r\n    }\r\n\r\n    //zoom in \r\n\r\n    back.addEventListener('click', zoom);\r\n\r\n    function zoom(e) {\r\n        if (e && e.target.classList.contains(\"slide__portfolio\") || container.classList.contains(\"show-info\") || container.classList.contains(\"nav__item\")) {\r\n            return;\r\n        }\r\n        sliderParent.classList.toggle(\"slider--big\");\r\n        cube.classList.toggle(\"d__cube--big\");\r\n        checkTimer();\r\n        if (!cube.classList.contains(\"d__cube--big\")) {\r\n            changeBorder(parseInt(document.querySelector(\".show-slide\").dataset.id));\r\n        }\r\n    }\r\n\r\n\r\n    //change slides on key press\r\n\r\n    window.addEventListener('keydown', (e) => {\r\n        if (e.defaultPrevented) {\r\n            return; // Do nothing if the event was already processed\r\n        }\r\n\r\n        switch (e.key) {\r\n\r\n            case \"Left\": // IE/Edge specific value\r\n                moveLeft(e);\r\n                checkTimer();\r\n            case \"ArrowLeft\":\r\n                moveLeft(e);\r\n                checkTimer();\r\n                break;\r\n            case \"Right\": // IE/Edge specific value\r\n                moveRight(e);\r\n                checkTimer();\r\n            case \"ArrowRight\":\r\n                moveRight(e);\r\n                checkTimer();\r\n                break;\r\n            case \" \":\r\n                zoom(e);\r\n                break;\r\n            case \"Esc\": // IE/Edge specific value\r\n                zoom(e);\r\n            case \"Escape\":\r\n                // Do something for \"esc\" key press.\r\n                zoom(e);\r\n                break;\r\n            default:\r\n                return; // Quit when this doesn't handle the key event.\r\n        }\r\n\r\n        // Cancel the default action to avoid it being handled twice\r\n        event.preventDefault();\r\n    }, true);\r\n\r\n});"],"sourceRoot":""}